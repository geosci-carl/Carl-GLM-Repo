bins_india <- c(4,1.5,6)
PCPI_india <- c(2.5,2.8,1.3)
PCPI_india_mean <- mean(PCPI_india,na.rm=TRUE)
points(bins_india,PCPI_india, pch=19, col="purple")
abline(h=PCPI_india_mean,col="purple") # India Mean
#Sri lanka
bins_SL <- 1.5
PCPI_SL <- c(1.4)
PCPI_SL_mean <- 1.4
points(bins_SL,PCPI_SL, pch=19, col="pink")
abline(h=PCPI_SL_mean,col="pink")
#China
bins_China <- c(1.5,2,6,6,6)
PCPI_China <- c(13.6,13,17,23.8,27.1)
PCPI_China_mean <- mean(PCPI_China,na.rm=TRUE)
points(bins_China,PCPI_China, pch=19, col="red")
abline(h=PCPI_China_mean,col="red")
#EU
bins_EU <- c(6,6,5,5,6,6,6,6,6,6,6,6)
PCPI_EU <- c(26.1,25.9,115.4,21.8,25.9,29.4,29.6,28.9,27.6,35.5,29.8,26.8)
PCPI_EU_mean <- mean(PCPI_EU,na.rm=TRUE)
points(bins_EU,PCPI_PCPI_EU, pch=19, col="black")
abline(h=PCPI_China_mean,col="black")
#EU
bins_EU <- c(6,6,5,5,6,6,6,6,6,6,6,6)
PCPI_EU <- c(26.1,25.9,115.4,21.8,25.9,29.4,29.6,28.9,27.6,35.5,29.8,26.8)
PCPI_EU_mean <- mean(PCPI_EU,na.rm=TRUE)
points(bins_EU,PCPI_EU, pch=19, col="black")
abline(h=PCPI_China_mean,col="black")
source('D:/Documents/GRAD SCHOOL/2 - FALL 2021/METEO 570/final project/570_Final.R', echo=TRUE)
PCPI_EU_mean
source('D:/Documents/GRAD SCHOOL/2 - FALL 2021/METEO 570/final project/570_Final.R', echo=TRUE)
## PRODUCE TRACE PLOTS FOR CALIBRATION
rm(list=ls())                        # Clear all previous variables
graphics.off()                       # clear plots
bins_US <- c(5,1.5,5,1.5,1.5,6,1.5,6,4,1.5,2,2,2)
PCPI_US <- c(28.8,21.2,21.7,20.5,21.8,30.1,31.4,18.8,37.3,20.3,24.1,20.8,39.3)
PCPI_US_mean <- mean(PCPI_US)
plot(bins_US,PCPI_US,
pch=19,
xlab="Trigger Temperature [deg C]",
ylab="Per Capita Personal Income [Thousand USD]",
col="lightblue",
ylim=c(0,40))
abline(h=PCPI_US_mean,col="lightblue") #US mean
hist(bins_US)
?hist()
hist(bins_US,breaks=1.75,3,4.5,5.5)
hist(bins_US)
source('D:/Documents/GRAD SCHOOL/2 - FALL 2021/METEO 570/final project/570_Final.R', echo=TRUE)
#South America
bins_SA <- c(1.5,1.5,1.5,1.5,4,2.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,2,1.5)
PCPI_SA <- c(16.3,5.3,6,11.7,2,7.4,3.9,3.7,2.9,2,1.9,2.3,2.2,.3,19.8)
PCPI_SA_mean <- mean(PCPI_SA,na.rm=TRUE)
points(bins_SA,PCPI_SA,pch=19,col="orange")
abline(h=PCPI_SA_mean,col="orange")
## PRODUCE TRACE PLOTS FOR CALIBRATION
rm(list=ls())                        # Clear all previous variables
graphics.off()                       # clear plots
bins_US <- c(5,1.5,5,1.5,1.5,6,1.5,6,4,1.5,2,2,2)
PCPI_US <- c(28.8,21.2,21.7,20.5,21.8,30.1,31.4,18.8,37.3,20.3,24.1,20.8,39.3)
PCPI_US_mean <- mean(PCPI_US)
plot(bins_US,PCPI_US,
pch=19,
xlab="Trigger Temperature [deg C]",
ylab="Per Capita Personal Income [Thousand USD]",
col="lightblue",
ylim=c(0,40))
abline(h=PCPI_US_mean,col="lightblue") #US mean
par(mfrow=c(1,2))
bins_US <- c(5,1.5,5,1.5,1.5,6,1.5,6,4,1.5,2,2,2)
PCPI_US <- c(28.8,21.2,21.7,20.5,21.8,30.1,31.4,18.8,37.3,20.3,24.1,20.8,39.3)
PCPI_US_mean <- mean(PCPI_US)
plot(bins_US,PCPI_US,
pch=19,
xlab="Trigger Temperature [deg C]",
ylab="Per Capita Personal Income [Thousand USD]",
col="lightblue",
ylim=c(0,40))
abline(h=PCPI_US_mean,col="lightblue") #US mean
## PRODUCE TRACE PLOTS FOR CALIBRATION
rm(list=ls())                        # Clear all previous variables
graphics.off()                       # clear plots
par(mfrow=c(2,2))
# US
bins_US <- c(5,1.5,5,1.5,1.5,6,1.5,6,4,1.5,2,2,2)
PCPI_US <- c(28.8,21.2,21.7,20.5,21.8,30.1,31.4,18.8,37.3,20.3,24.1,20.8,39.3)
PCPI_US_mean <- mean(PCPI_US)
plot(bins_US,PCPI_US,
pch=19,
xlab="Trigger Temperature [deg C]",
ylab="Per Capita Personal Income [Thousand USD]",
col="lightblue",
ylim=c(0,40))
abline(h=PCPI_US_mean,col="lightblue") #US mean
#india and Sri Lanka
bins_india <- c(4,1.5,6)
PCPI_india <- c(2.5,2.8,1.3)
PCPI_india_mean <- mean(PCPI_india,na.rm=TRUE)
plot(bins_india,PCPI_india,
pch=19,
xlab="Trigger Temperature [deg C]",
ylab="Per Capita Personal Income [Thousand USD]",
col="purple",
ylim=c(0,40))
abline(h=PCPI_india_mean,col="purple") # India Mean
bins_SL <- 1.5
PCPI_SL <- c(1.4)
PCPI_SL_mean <- 1.4
points(bins_SL,PCPI_SL, pch=19, col="pink")
abline(h=PCPI_SL_mean,col="pink")
## PRODUCE TRACE PLOTS FOR CALIBRATION
rm(list=ls())                        # Clear all previous variables
graphics.off()                       # clear plots
par(mfrow=c(2,2))
# US
bins_US <- c(5,1.5,5,1.5,1.5,6,1.5,6,4,1.5,2,2,2)
PCPI_US <- c(28.8,21.2,21.7,20.5,21.8,30.1,31.4,18.8,37.3,20.3,24.1,20.8,39.3)
PCPI_US_mean <- mean(PCPI_US)
plot(bins_US,PCPI_US,
pch=19,
xlab="Trigger Temperature [deg C]",
ylab="Per Capita Personal Income [Thousand USD]",
col="lightblue",
ylim=c(0,40),
main="Major US Metropolitan Areas")
abline(h=PCPI_US_mean,col="lightblue") #US mean
plot(bins_india,PCPI_india,
pch=19,
xlab="Trigger Temperature [deg C]",
ylab="Per Capita Personal Income [Thousand USD]",
col="purple",
ylim=c(0,40),
main="India (purple) and Sri Lanka (pink)")
#india and Sri Lanka
bins_india <- c(4,1.5,6)
PCPI_india <- c(2.5,2.8,1.3)
PCPI_india_mean <- mean(PCPI_india,na.rm=TRUE)
plot(bins_india,PCPI_india,
pch=19,
xlab="Trigger Temperature [deg C]",
ylab="Per Capita Personal Income [Thousand USD]",
col="purple",
ylim=c(0,40),
main="India (purple) and Sri Lanka (pink)")
abline(h=PCPI_india_mean,col="purple") # India Mean
bins_SL <- 1.5
PCPI_SL <- c(1.4)
PCPI_SL_mean <- 1.4
points(bins_SL,PCPI_SL, pch=19, col="pink")
abline(h=PCPI_SL_mean,col="pink")
#China
bins_China <- c(1.5,2,6,6,6)
PCPI_China <- c(13.6,13,17,23.8,27.1)
PCPI_China_mean <- mean(PCPI_China,na.rm=TRUE)
plot(bins_China,PCPI_China,
pch=19,
xlab="Trigger Temperature [deg C]",
ylab="Per Capita Personal Income [Thousand USD]",
col="red",
ylim=c(0,40),
main="China Metropolitan Areas")
abline(h=PCPI_China_mean,col="red")
#EU
bins_EU <- c(6,6,5,5,6,6,6,6,6,6,6,6)
PCPI_EU <- c(26.1,25.9,15.4,21.8,25.9,29.4,29.6,28.9,27.6,35.5,29.8,26.8)
PCPI_EU_mean <- mean(PCPI_EU,na.rm=TRUE)
plot(bins_EU,PCPI_EU
pch=19,
xlab="Trigger Temperature [deg C]",
ylab="Per Capita Personal Income [Thousand USD]",
col="black",
ylim=c(0,40),
main="European Countries")
abline(h=PCPI_EU_mean,col="black")
#EU
bins_EU <- c(6,6,5,5,6,6,6,6,6,6,6,6)
PCPI_EU <- c(26.1,25.9,15.4,21.8,25.9,29.4,29.6,28.9,27.6,35.5,29.8,26.8)
PCPI_EU_mean <- mean(PCPI_EU,na.rm=TRUE)
plot(bins_EU,PCPI_EU,
pch=19,
xlab="Trigger Temperature [deg C]",
ylab="Per Capita Personal Income [Thousand USD]",
col="black",
ylim=c(0,40),
main="European Countries")
abline(h=PCPI_EU_mean,col="black")
#South America
bins_SA <- c(1.5,1.5,1.5,1.5,4,2.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,2,1.5)
PCPI_SA <- c(16.3,5.3,6,11.7,2,7.4,3.9,3.7,2.9,2,1.9,2.3,2.2,.3,19.8)
PCPI_SA_mean <- mean(PCPI_SA,na.rm=TRUE)
plot(bins_SA,PCPI_SA,
pch=19,
xlab="Trigger Temperature [deg C]",
ylab="Per Capita Personal Income [Thousand USD]",
col="black",
ylim=c(0,40),
main="South American Countries (and Brazilian Metro Areas)")
abline(h=PCPI_SA_mean,col="orange")
source('D:/Documents/GRAD SCHOOL/2 - FALL 2021/METEO 570/final project/570_Final.R', echo=TRUE)
source('D:/Documents/GRAD SCHOOL/2 - FALL 2021/METEO 570/final project/570_Final.R', echo=TRUE)
source('D:/Documents/GRAD SCHOOL/2 - FALL 2021/METEO 570/final project/570_Final.R', echo=TRUE)
source('D:/Documents/GRAD SCHOOL/2 - FALL 2021/METEO 570/final project/570_Final.R', echo=TRUE)
source('D:/Documents/GRAD SCHOOL/2 - FALL 2021/METEO 570/final project/570_Final.R', echo=TRUE)
# Africa
bins_africa <- c(2,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,2,2,1.5,1.5,1.5,1.5,2)
PCPI_africa <- c(5.4,4.5,2.2,1.8,6.9,1.5,2,.5,.4,.7,1.6,2.9,.46,.3,.89,.65,.3)
PCPI_africa_mean <- mean(PCPI_africa,na.rm=TRUE)
plot(bins_africa,PCPI_africa,
pch=19,
xlab="Trigger Temperature [deg C]",
ylab="Per Capita Personal Income [Thousand USD]",
col="yellow",
ylim=c(0,40),
xlim=c(1.5,6),
main="African Countries")
abline(h=PCPI_india_mean,col="yellow") # India Mean
source('D:/Documents/GRAD SCHOOL/2 - FALL 2021/METEO 570/final project/570_Final.R', echo=TRUE)
source('D:/Documents/GRAD SCHOOL/2 - FALL 2021/METEO 570/final project/570_Final.R', echo=TRUE)
rm(list = ls())
graphics.off()
## Set the seed (for reproducibility)
set.seed(1234)
#==========================================================================================================================================================
# Objective Function                                                                                                                                      #
# Objective function for use with DEoptim                                                                                                                 #
# Carl Fredrick G. Aquino / cga5030 / 994085920                                                                                                           #
#==========================================================================================================================================================
findShape <- function(pars,quantiles,myshape){
peg <- c(.01,.05,.17,.50,.83,.95,.99)
library(truncnorm)
# can do IF test later to specify this by bringing in another variable from driver
# ie, if (test==1/2/3) do norm/lnorm/truncnorm
if (myshape==1){test <- qnorm(peg,mean = pars[1],sd = pars[2])}
if (myshape==2){test <- qlnorm(peg,meanlog = pars[1],sdlog = pars[2])}
if (myshape==3){test <- qtruncnorm(peg,a=-.25,b=Inf,mean = pars[1],sd = pars[2])}
# RMSE = sqrt(  sum(observation - known)^2 / N    )
N=length(quantiles)
RMSE = sqrt(sum((quantiles-test)^2)/N)
return(RMSE)
}
#==========================================================================================================================================================
# Configure !!! - ENTER TRUE or FALSE FOR DESIRED ANALYSIS
shape.norm = TRUE # true if normal distribution
shape.lnorm = TRUE # true if lognormal distribution
shape.truncnorm = TRUE # true if truncated normal distribution
# specify quantiles
quantiles_2100H <- c(.43,.62,.79,1.11,1.74,2.38,3.29) # GLOBAL SLR FROM BAMBER TABLE 2, 2100 H
library(DEoptim)
library(truncnorm)
if (shape.norm){
# for normal distribution
myshape=1
## Set up DEoptim
npars=2
lower.bounds = rep(NA,npars)
upper.bounds = rep(NA,npars)
NP_scale = 11
n_iter = 200 # Tony ran 100 # Vivek tends to do 2000 - 5000. # Start with 10 and then see what happens
lower.bounds <- c(-100,0)
upper.bounds <- c(100,100)
DEoptim.output <- DEoptim(findShape,lower.bounds,upper.bounds,control=list(NP=NP_scale*npars, itermax=n_iter, parallelType=1,
parVar = list("quantiles_2100H")),
quantiles=quantiles_2100H,
myshape=myshape
)
grid = seq(-.50,3.00,.01)
plot(grid,pnorm(grid,mean=DEoptim.output$optim$bestmem[1],sd=DEoptim.output$optim$bestmem[2]),type="l",xlab="x",ylab="CDF")
points(quantiles_2100H,c(.01,.05,.17,.50,.83,.95,.99),pch=19)
OUTPUT_norm_pars <- DEoptim.output$optim$bestmem
OUTPUT_norm_rmse <- DEoptim.output$optim$bestval
}
if (shape.lnorm){
# for normal distribution
myshape=2
## Set up DEoptim
npars=2
lower.bounds = rep(NA,npars)
upper.bounds = rep(NA,npars)
NP_scale = 11
n_iter = 300 # Tony ran 100 # Vivek tends to do 2000 - 5000. # Start with 10 and then see what happens
lower.bounds <- c(-1000,0)
upper.bounds <- c(1000,1000)
DEoptim.output <- DEoptim(findShape,lower.bounds,upper.bounds,control=list(NP=NP_scale*npars, itermax=n_iter, parallelType=1,
parVar = list("quantiles_2100H")),
quantiles=quantiles_2100H,
myshape=myshape
)
grid = seq(-.50,3.00,.01)
plot(grid,plnorm(grid,meanlog=DEoptim.output$optim$bestmem[1],sdlog=DEoptim.output$optim$bestmem[2]),type="l",xlab="x",ylab="CDF")
points(quantiles_2100H,c(.01,.05,.17,.50,.83,.95,.99),pch=19)
OUTPUT_lnorm_pars <- DEoptim.output$optim$bestmem
OUTPUT_lnorm_rmse <- DEoptim.output$optim$bestval
}
if (shape.truncnorm){
# for truncated normal distribution
myshape=3
## Set up DEoptim
npars=2
lower.bounds = rep(NA,npars)
upper.bounds = rep(NA,npars)
NP_scale = 11
n_iter = 700 # Tony ran 100 # Vivek tends to do 2000 - 5000. # Start with 10 and then see what happens
lower.bounds <- c(-4000,-1000)
upper.bounds <- c(1000,1000)
DEoptim.output <- DEoptim(findShape,lower.bounds,upper.bounds,control=list(NP=NP_scale*npars, itermax=n_iter, parallelType=1,
parVar = list("quantiles_2100H")),
quantiles=quantiles_2100H,
myshape=myshape
)
grid = seq(-.50,3.00,.01)
plot(grid,ptruncnorm(grid,a=-.25,b=Inf,mean=DEoptim.output$optim$bestmem[1],sd=DEoptim.output$optim$bestmem[2]),type="l",xlab="x",ylab="CDF")
points(quantiles_2100H,c(.01,.05,.17,.50,.83,.95,.99),pch=19)
OUTPUT_trunc_pars <- DEoptim.output$optim$bestmem
OUTPUT_trunc_rmse <- DEoptim.output$optim$bestval
}
if (shape.truncnorm){
# for truncated normal distribution
myshape=3
## Set up DEoptim
npars=2
lower.bounds = rep(NA,npars)
upper.bounds = rep(NA,npars)
NP_scale = 11
n_iter = 700 # Tony ran 100 # Vivek tends to do 2000 - 5000. # Start with 10 and then see what happens
lower.bounds <- c(-4000,-1000)
upper.bounds <- c(1000,1000)
DEoptim.output <- DEoptim(findShape,lower.bounds,upper.bounds,control=list(NP=NP_scale*npars, itermax=n_iter, parallelType=1,
parVar = list("quantiles_2100H")),
quantiles=quantiles_2100H,
myshape=myshape
)
grid = seq(-.50,3.00,.01)
plot(grid,ptruncnorm(grid,a=-.25,b=Inf,mean=DEoptim.output$optim$bestmem[1],sd=DEoptim.output$optim$bestmem[2]),type="l",xlab="x",ylab="CDF")
points(quantiles_2100H,c(.01,.05,.17,.50,.83,.95,.99),pch=19)
OUTPUT_trunc_pars <- DEoptim.output$optim$bestmem
OUTPUT_trunc_rmse <- DEoptim.output$optim$bestval
}
save.image("D:/Documents/GRAD SCHOOL/Keller Lab Group/research - local workspace/expert quantile shape/shape_sensitivity_v6.Rdata.RData")
load("D:/Documents/GRAD SCHOOL/Keller Lab Group/research - local workspace/expert quantile shape/shape_sensitivity_v6.RData")
plot(grid,plnorm(grid,meanlog=DEoptim.output$optim$bestmem[1],sdlog=DEoptim.output$optim$bestmem[2]),type="l",xlab="x",ylab="CDF")
points(quantiles_2100H,c(.01,.05,.17,.50,.83,.95,.99),pch=19)
plot(grid,plnorm(grid,meanlog=1.47,sdlog=0.444), type="l",xlab="x",ylab="CDF")
points(quantiles_2100H,c(.01,.05,.17,.50,.83,.95,.99),pch=19)
if (shape.lnorm){
# for normal distribution
myshape=2
## Set up DEoptim
npars=2
lower.bounds = rep(NA,npars)
upper.bounds = rep(NA,npars)
NP_scale = 11
n_iter = 300 # Tony ran 100 # Vivek tends to do 2000 - 5000. # Start with 10 and then see what happens
lower.bounds <- c(-1000,0)
upper.bounds <- c(1000,1000)
DEoptim.output <- DEoptim(findShape,lower.bounds,upper.bounds,control=list(NP=NP_scale*npars, itermax=n_iter, parallelType=1,
parVar = list("quantiles_2100H")),
quantiles=quantiles_2100H,
myshape=myshape
)
grid = seq(-.50,3.00,.01)
plot(grid,plnorm(grid,meanlog=DEoptim.output$optim$bestmem[1],sdlog=DEoptim.output$optim$bestmem[2]),type="l",xlab="x",ylab="CDF")
points(quantiles_2100H,c(.01,.05,.17,.50,.83,.95,.99),pch=19)
OUTPUT_lnorm_pars <- DEoptim.output$optim$bestmem
OUTPUT_lnorm_rmse <- DEoptim.output$optim$bestval
}
plot(grid,plnorm(grid,meanlog=DEoptim.output$optim$bestmem[1],sdlog=DEoptim.output$optim$bestmem[2]),type="l",xlab="x",ylab="CDF")
points(quantiles_2100H,c(.01,.05,.17,.50,.83,.95,.99),pch=19)
OUTPUT_lnorm_pars <- DEoptim.output$optim$bestmem
OUTPUT_lnorm_rmse <- DEoptim.output$optim$bestval
OUTPUT_lnorm_pars
plot(grid,plnorm(grid,meanlog=0.147,sdlog=0.444),type="l",xlab="x",ylab="CDF")
points(quantiles_2100H,c(.01,.05,.17,.50,.83,.95,.99),pch=19)
lines(grid,plnorm(grid,meanlog = -0.681,sdlog = 0.774),col="red",lwd=2)
## PRODUCE TRACE PLOTS FOR CALIBRATION
rm(list=ls())                        # Clear all previous variables
graphics.off()                       # clear plots
par(mfrow=c(2,3))
bins_US <- c(5,1.5,5,1.5,1.5,6,1.5,6,4,1.5,2,2,2)
PCPI_US <- c(28.8,21.2,21.7,20.5,21.8,30.1,31.4,18.8,37.3,20.3,24.1,20.8,39.3)
PCPI_US_mean <- mean(PCPI_US)
plot(bins_US,PCPI_US,
pch=19,
xlab="Trigger Temperature [deg C]",
ylab="Per Capita Personal Income [Thousand USD]",
col="blue",
ylim=c(0,40),
xlim=c(1.5,6),
main="US Metropolitan Areas")
abline(h=PCPI_US_mean,col="blue") #US mean
#EU
bins_EU <- c(6,6,5,5,6,6,6,6,6,6,6,6)
PCPI_EU <- c(26.1,25.9,15.4,21.8,25.9,29.4,29.6,28.9,27.6,35.5,29.8,26.8)
PCPI_EU_mean <- mean(PCPI_EU,na.rm=TRUE)
plot(bins_EU,PCPI_EU,
pch=19,
xlab="Trigger Temperature [deg C]",
ylab="Per Capita Personal Income [Thousand USD]",
col="black",
ylim=c(0,40),
xlim=c(1.5,6),
main="European Countries")
abline(h=PCPI_EU_mean,col="black")
#China
bins_China <- c(1.5,2,6,6,6)
PCPI_China <- c(13.6,13,17,23.8,27.1)
PCPI_China_mean <- mean(PCPI_China,na.rm=TRUE)
plot(bins_China,PCPI_China,
pch=19,
xlab="Trigger Temperature [deg C]",
ylab="Per Capita Personal Income [Thousand USD]",
col="red",
ylim=c(0,40),
xlim=c(1.5,6),
main="China Metropolitan Areas")
abline(h=PCPI_China_mean,col="red")
#South America
bins_SA <- c(1.5,1.5,1.5,1.5,4,2.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,2,1.5,6,6)
PCPI_SA <- c(16.3,5.3,6,11.7,2,7.4,3.9,3.7,2.9,2,1.9,2.3,2.2,.3,19.8,14.6,18.8)
PCPI_SA_mean <- mean(PCPI_SA,na.rm=TRUE)
plot(bins_SA,PCPI_SA,
pch=19,
xlab="Trigger Temperature [deg C]",
ylab="Per Capita Personal Income [Thousand USD]",
col="orange",
ylim=c(0,40),
xlim=c(1.5,6),
main="South American Metro Areas")
abline(h=PCPI_SA_mean,col="orange")
#india and Sri Lanka
bins_india <- c(4,1.5,6)
PCPI_india <- c(2.5,2.8,1.3)
PCPI_india_mean <- mean(PCPI_india,na.rm=TRUE)
plot(bins_india,PCPI_india,
pch=19,
xlab="Trigger Temperature [deg C]",
ylab="Per Capita Personal Income [Thousand USD]",
col="purple",
ylim=c(0,40),
xlim=c(1.5,6),
main="India (purple) and Sri Lanka (pink)")
abline(h=PCPI_india_mean,col="purple") # India Mean
bins_SL <- 1.5
PCPI_SL <- c(1.4)
PCPI_SL_mean <- 1.4
points(bins_SL,PCPI_SL, pch=19, col="pink")
abline(h=PCPI_SL_mean,col="pink")
# Africa
bins_africa <- c(2,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,2,2,1.5,1.5,1.5,1.5,2)
PCPI_africa <- c(5.4,4.5,2.2,1.8,6.9,1.5,2,.5,.4,.7,1.6,2.9,.46,.3,.89,.65,.3)
PCPI_africa_mean <- mean(PCPI_africa,na.rm=TRUE)
plot(bins_africa,PCPI_africa,
pch=19,
xlab="Trigger Temperature [deg C]",
ylab="Per Capita Personal Income [Thousand USD]",
col="green",
ylim=c(0,40),
xlim=c(1.5,6),
main="African Countries")
abline(h=PCPI_india_mean,col="green") # India Mean
## PRODUCE TRACE PLOTS FOR CALIBRATION
rm(list=ls())                        # Clear all previous variables
graphics.off()                       # clear plots
bins_US <- c(5,1.5,5,1.5,1.5,6,1.5,6,4,1.5,2,2,2)
PCPI_US <- c(28.8,21.2,21.7,20.5,21.8,30.1,31.4,18.8,37.3,20.3,24.1,20.8,39.3)
PCPI_US_mean <- mean(PCPI_US)
length(bins_US)
length(PCPI_US)
PCPI_US_mean <- mean(PCPI_US)
plot(bins_US,PCPI_US,
pch=19,
xlab="Trigger Temperature [deg C]",
ylab="Per Capita Personal Income [Thousand USD]",
col="blue",
ylim=c(0,40),
xlim=c(1.5,6),
main="US Metropolitan Areas")
abline(h=PCPI_US_mean,col="blue") #US mean
source('D:/Documents/GRAD SCHOOL/2 - FALL 2021/METEO 570/final project/570_Final.R', echo=TRUE)
source('D:/Documents/GRAD SCHOOL/2 - FALL 2021/METEO 570/final project/570_Final.R', echo=TRUE)
source('D:/Github Repos/570-Final-Project/570_Final.R', echo=TRUE)
source('D:/Github Repos/570-Final-Project/570_Final.R', echo=TRUE)
source('D:/Github Repos/570-Final-Project/570_Final.R', echo=TRUE)
source('D:/Github Repos/570-Final-Project/570_Final.R', echo=TRUE)
source('D:/Github Repos/570-Final-Project/570_Final.R', echo=TRUE)
source('D:/Github Repos/570-Final-Project/570_Final.R', echo=TRUE)
install.packages("C:/Users/dapro/Downloads/ncdf4_1.21.tar.gz", repos = NULL, type = "source")
install.packages("ncdf4")
install.packages("C:/Users/dapro/Downloads/ncdf4_1.21.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/dapro/Downloads/ncdf4_1.21.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/dapro/Downloads/ncdf4_1.21.tar.gz", repos = NULL, type = "source")
library(ncdf4)
setwd("D:/Github Repos/Carl-GLM-Repo")
install.packages("raster")
install.packages("rgdal")
install.packages("C:/Users/dapro/Downloads/rgdal_1.6-6.tar.gz", repos = NULL, type = "source")
install.packages("binaryTimeSeries")
install.packages("cffdrs")
install.packages("intensity.analysis")
install.packages("landsat")
install.packages("mapReasy")
install.packages("move")
install.packages("occUncertain")
install.packages(RSIP)
install.packages("RSIP")
install.packages("waver")
install.packages("C:/Users/dapro/Downloads/rgdal_1.6-6.tar.gz", repos = NULL, type = "source")
install.packages("rgdal", dependencies = TRUE)
library(ncdf4) # package for netcdf manipulation
library(raster) # package for raster manipulation
library(rgdal) # package for geospatial analysis
library(ggplot2) # package for plotting
